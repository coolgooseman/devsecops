name: CI/CD

on: push

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_LOGIN }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push the Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            coolgooseman/devsecops:latest

  scan:
    name: Scan
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_LOGIN }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Pull latest Docker image
        run: |
         docker pull coolgooseman/devsecops:latest

      - name: Docker Scout CVEs
        uses: docker/scout-action@v1.5.0
        with:
          command: cves
          image: coolgooseman/devsecops:latest
          # only-fixed: true
          only-severities: critical,high
          ignore-base: false
          ignore-unchanged: false
          write-comment: true
          github-token: ${{ secrets.GITHUB_TOKEN }} # to be able to write the comment
          #exit-code: true
          #exit-on: vulnerability

  test:
    name: Test
    needs: [ scan ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_LOGIN }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: test 
        run: |
          docker run -d -p 80:5000 coolgooseman/devsecops:latest
          sleep 10s
          curl http://localhost
          docker ps -aq | xargs docker stop | xargs docker rm

  deploy:
    name: Deploy
    needs: [ test ]
    runs-on: self-hosted
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - run: |
          sudo kubectl delete deployment --all              
          sudo kubectl apply -f ${{ github.workspace }}/kubernetes/deployment.yaml --force
          sudo kubectl apply -f ${{ github.workspace }}/kubernetes/nginx-service.yaml --force


  automated-api-tests:
     name: Automated API tests using Postman CLI
     needs: [ deploy ]
     runs-on: ubuntu-latest
     steps:
       - uses: actions/checkout@v4
       - name: Install Postman CLI
         run: |
           curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh
       - name: Login to Postman CLI
         run: postman login --with-api-key ${{ secrets.POSTMAN_API_KEY }} 
       - name: Run API tests
         run: |
              postman collection run 32587485-a7f022c5-ea3a-4c61-bb2e-eb62ec0b8a4e
